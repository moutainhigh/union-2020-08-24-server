<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration status="WARN" monitorInterval="30">
    <!--先定义所有的appender-->
    <appenders>
        <!--这个输出控制台的配置-->
        <console name="Console" target="SYSTEM_OUT">
            <!--输出日志的格式-->
            <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
        </console>
        <!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用-->
        <File name="RollingFileTemp" fileName="logs/u8server_tmp.log" append="false">
            <PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n"/>
        </File>
        <!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="RollingFileInfo" fileName="logs/u8server.log"
                     filePattern="${sys:user.home}/logs/$${date:yyyy-MM}/u8server-%d{yyyy-MM-dd}-%i.log">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="100 MB"/>
            </Policies>
        </RollingFile>
        <RollingFile name="RollingFileError" fileName="logs/u8server_error.log"
                     filePattern="${sys:user.home}/logs/$${date:yyyy-MM}/u8server_error-%d{yyyy-MM-dd}-%i.log">
            <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="100 MB"/>
            </Policies>
        </RollingFile>
    </appenders>
    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <Logger name="com.u8.server" level="debug" additivity="true"/>
        <Logger name="com.mchange.v2" level="error" additivity="true"/>
        <Logger name="org.apache.http" level="debug" additivity="true"/>
        <Logger name="httpclient.wire.header" level="debug" additivity="true"/>
        <Logger name="httpclient.wire.content" level="debug" additivity="true"/>
        <Logger name="org.springframework" level="error" additivity="true"/>
        <Logger name="org.hibernate" level="error" additivity="true" />
        <Logger name="org.apache.struts2.convention" level="info" additivity="true" />
        <Logger name="org.apache.struts2.views" level="info" additivity="true" />
        <Logger name="org.apache.struts2.dispatcher" level="trace" additivity="true" />
        <Logger name="org.apache.struts2.config" level="error" additivity="true" />
        <Logger name="com.opensymphony.xwork2.conversion" level="info" additivity="true" />
        <Logger name="com.opensymphony.xwork2.config" level="info" additivity="true" />
        <Logger name="com.opensymphony.xwork2.ognl" level="info" additivity="true" />
        <Logger name="com.opensymphony.xwork2.util" level="info" additivity="true" />
        <Logger name="com.opensymphony.xwork2.security" level="info" additivity="true" />
        <Logger name="com.opensymphony.xwork2.interceptor" level="debug" additivity="true" />
        <root level="all">
            <appender-ref ref="Console"/>
            <appender-ref ref="RollingFileTemp"/>
            <appender-ref ref="RollingFileInfo"/>
            <appender-ref ref="RollingFileError"/>
        </root>
    </loggers>
</configuration>